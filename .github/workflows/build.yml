name: Build and distribute app to FireBase

on:
  push:
    branches:
      - develop

jobs:
  build-android:
    name: build android
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Get source tree
        run: ls -la
      - name: Install npm dependencies
        run: npm install --legacy-peer-deps
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-caches-
      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew
      - name: Build all artifacts
        run: cd android && ./gradlew assembleRelease --no-daemon
#        env:
#          DEV_KEYSTORE_PASSWORD: ${{ secrets.DEV_KEYSTORE_PASSWORD }}
#          DEV_KEY_ALIAS: ${{ secrets.DEV_KEYSTORE_PASSWORD }}
#          DEV_KEY_PASSWORD: ${{ secrets.DEV_KEYSTORE_PASSWORD }}
#      #      - name: Upload Artifact
#      #        uses: actions/upload-artifact@v2
#      #        with:
#      #          name: Signed App Bundle
#      #          path: ${{ secrets.REACT_NATIVE_ANDROID_APP_PATH }}
#      - name: Distribute app via Firebase App Distribution
#        env:
#          firebaseGroups: ${{ secrets.FIREBASE_TESTER_GROUP }}
#          firebaseTesters: ${{ secrets.FIREBASE_TESTERS }}
#          firebaseToken: ${{ secrets.FIREBASE_TOKEN }}
#          firebaseAppId: ${{ secrets.FIREBASE_APP_ID }}
#          notes: Release to app distribution by CICD
#          appPath: ${{ secrets.REACT_NATIVE_ANDROID_APP_PATH }}
#        run: |
#          npm install -g firebase-tools
#          firebase \
#            appdistribution:distribute $appPath \
#            --app $firebaseAppId \
#            --release-notes "$notes" \
#            --testers "$firebaseTesters" \
#            --groups "$firebaseGroups" \
#            --token "$firebaseToken"
